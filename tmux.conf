# Rebind tmux prefix
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Use vi key-bindings
setw -g mode-keys vi

# Open new/split panes with the path of the current pane
unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'

# Vim-like key bindings for pane navigation
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l # normally used for last-window
bind l select-pane -R

# Intuitive window-splitting keys
bind | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind \\ split-window -h -c '#{pane_current_path}' # normally prefix-%
bind - split-window -v -c '#{pane_current_path}' # normally prefix-"

# Colors: One Half (Dark)
# https://github.com/sonph/onehalf
BLACK="#383a42"
RED="#e45649"
GREEN="#50a14f"
YELLOW="#c18401"
BLUE="#0184bc"
MAGENTA="#a626a4"
CYAN="#0997b3"
WHITE="#fafafa"
BACKGROUND="$WHITE"
FOREGROUND="$BLACK"

# Status bar
set -g status-position top
set -g status-interval 60 # Default is 15.
set -g status-style "bg=$BACKGROUND,fg=$FOREGROUND,italics"
set -g status-left-length 0
set -g status-right-length 50
set -g status-left ""
set -g status-right "#[bg=$YELLOW,fg=$BACKGROUND] time #[bg=default,fg=$YELLOW] %Y-%m-%d %H:%M #[bg=$RED,fg=$BACKGROUND] session #[bg=default,fg=$RED] #S "

set -g status-justify centre
set -g window-status-style 'bg=default,fg=default'
set -g window-status-format "#[bg=$BLUE,fg=$BACKGROUND] #I: #W#{?window_zoomed_flag, *,} "
set -g window-status-current-format "#[bg=$FOREGROUND,fg=$BACKGROUND] #I: #W#{?window_zoomed_flag, *,} "
set -g window-status-separator ' '

# Declare our terminal properly, import for vim colors
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ',xterm-256color:Tc'

# Mouse can be used to select panes, windows and resizing
set -g mouse on

# Start window and pane numbering at 1, (0 is too hard to reach).
set -g base-index 1
set -g pane-base-index 1

# Don't wait for an escape sequencey after seeing C-a
set -s escape-time 10

# Dynamically update emulator tab and window titles.
set -g set-titles on

# Needed as on tmux 1.9 and up (defaults to off).
# Added in tmux commit c7a121cfc0137c907b7bfb.
set -g focus-events on

# But don't change tmux's own window titles.
set -g automatic-rename off
set -g allow-rename off


# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
#
# (Would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting).
set -g set-titles-string "#T : #h > #S > #W"

# Show bells in window titles.
set -g window-status-bell-style fg=yellow,bold,underscore

# Turn off distracting border highlight.
set-option -ga pane-active-border-style bg=default,fg=default

# Copy-mode and clipboard bindings
# Using clipper to add to system clipboard
bind-key Escape copy-mode
bind-key p paste-buffer
# These bindings require tmux 2.4 and up
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "nc -U ~/.clipper.sock"
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "nc -U ~/.clipper.sock"

# MacOS 10.5+ launches tmux into the root bootstrap namespace rather than the user namespace
# set -g default-command 'tmux rename-window zsh; reattach-to-user-namespace -l zsh'

# Plugins
# Save tmux environment so it can be restored after system restart.
set -g @resurrect-dir "$HOME/.local/share/tmux/resurrect"
set -g @continuum-restore 'on'
run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux
run-shell ~/.tmux/plugins/tmux-continuum/continuum.tmux
run-shell ~/.vim/pack/bundle/opt/vim-tmux-navigator/vim-tmux-navigator.tmux
